document.addEventListener('DOMContentLoaded',()=>{document.getElementById('process-btn').addEventListener('click',async()=>{const f=document.getElementById('file-input').files[0],r=document.getElementById('page-range').value.trim(),d=document.getElementById('download-links'),s=document.getElementById('status');if(!f){alert('Please select a PDF.');return}if(!r.match(/^\d+(-\d+)?(,\d+(-\d+)?)*$/)){alert('Invalid page range format. Use e.g., 1, 3-5, 8.');return}try{s.textContent='Splitting PDF...';d.innerHTML='';const{PDFDocument}=PDFLib;const p=await PDFDocument.load(await f.arrayBuffer());const n=p.getPageCount();const indices=new Set();r.split(',').forEach(part=>{if(part.includes('-')){const[start,end]=part.split('-').map(Number);for(let i=start;i<=end;i++){if(i>=1&&i<=n)indices.add(i-1)}}else{const page=Number(part);if(page>=1&&page<=n)indices.add(page-1)}});if(indices.size===0){alert('Page range is out of bounds.');s.textContent='Ready';return}const sortedIndices=Array.from(indices).sort((a,b)=>a-b);for(const i of sortedIndices){const sP=await PDFDocument.create();const[c]=await sP.copyPages(p,[i]);sP.addPage(c);const b=await sP.save();const u=URL.createObjectURL(new Blob([b],{type:'application/pdf'}));const a=document.createElement('a');a.href=u;a.download=`page_${i+1}.pdf`;a.className='inline-block text-center w-full bg-emerald-500/20 text-emerald-300 font-bold py-3 px-6 rounded-lg mb-2';a.textContent=`Download Page ${i+1}`;d.appendChild(a)}s.textContent=`Split successful! ${indices.size} pages created.`;showResetButton();}catch(e){s.textContent=`Error: ${e.message}`}})});